#问题3-1 数字的三个内置类的名称是什么？
numeric(浮点数）；integer（整数）；complex（复数）

#问题3-2 用什么函数查找了因子的水平值？
levels()

#问题3-3 如何把字符串“6.283185”转换为数字？
as.numeric("6.283185")

#问题3-4 指出至少三个用于检视变量内容的函数。
summary();attributes();View()

#问题3-5 如何删除用户工作区中的所有变量？
rm()       #可以选择删除区间

#练习3-1 查找以下值Inf、NA、NaN和""的类、类型、模式及存储模式。
#查找类
class(Inf)
class(NA)
class(NaN)
class("")
#查找类型
同上（认为类型与类相同）
#查找模式
levels(Inf)
levels(NA)
levels(NaN)
levels("")
#存储模式
as.interger(Inf)
as.interger(NA)
as.interger(NaN)
as.interger("")

#练习3-2 随机从“dog”、“cat”、“dolphin”、“hamster”和“goldfish”中以相等的概率生成100个宠物名。显示所得变量的前几个值，并计算每种宠物的数量。
animal <- factor(c("dog","cat","dolphin","hamster","goldfish"))
animal_1 <- sample(c("dog","cat","dolphin","hamster","goldfish"),100,replace=TRUE)
summary(as.factor(animal_1))

#练习3-3，创建一些以水果命名的变量。列出用户工作区中所有包含字母“a”的变量。
apple <- 1 
lemon <- 2
peach <- 3
banana <- 4
orange <- 5
pear <- 6
ls(pattern="a")

#问题4-1 你将如何创建一个包含值0、0.25、0.5、0.75、1和1.25的向量？
seq.int(0,1.25,0.25)

#问题4-2 描述两种命名向量元素的方式。
①c(apple=1,banana=2)
②c1 <- 1:2
names(c1) <- c("apple","banana")

#问题4-3 向量索引中的四种类型是什么？
正整数、负整数、逻辑值、字符

#问题4-4 一个3×4×6的数组的长度是多少？
72

#问题4-5 你会用哪个操作符来执行两个矩阵的内积？
%*%

#问题4 1）
c1 <- c(seq.int(11,50,3))
c2 <- c(2,3)
c1-c2

#问题4 2）
c3 <- c(seq.int(1.1,4,20))
c4 <- c(4,5,8,9)
c3*c4

#问题4 3）
c5 <- c(1,2,4,6)
c6 <- c(8,0,-1,-4)
c5+c6
c5-c6
c5*c6
c5/c6

#练习4-1 第n个三角形数表示为n*(n+1)/2.创建一个包含前50个三角形数的序列。R有一个内置常数letters，它包含小写的罗马字母。使用前15个英文字母来给你刚刚创建的向量命名。选择命名为元音的三角数。
i <- c(1:50)
n=i*(i+1)/2
print(n)
names(n) <- c(letters[1:15])

#练习4-2
n1 <- c(11:1,1:11)
diag(n1)

#问题5-1 下面列表的长度是多少？
x1 <- list(alpha = 1, list(beta = 2, gamma = 3, delta = 4), eta = NULL)
length(x1)        #长度是3

#问题5-2 你会在哪里找到成对列表？
使用formals时

#问题5-3 尽可能多地说出的几种创建数据框子集的方法
①subset(data_frame,y>0,x)      #挑选y>0的x列子集
②data_frame$x                  #挑选x列的子集
③data_frame[,2]                #第三种方法，挑选第二列的子集
④data_frame[,"z"]              #第四种方法，挑选z列的子集

#问题5-4 如何创建一个数据框，使得它的列名既非唯一又非有效？
传入check.names = FALSE 

#问题5-5 你会使用哪个函数将一个数据框追加到另一个之后？
如果两个数据框大小一致，可用cbind和rbind
如果两个数据框具有相同的列，可用merge

#练习5-1 创建一个列表变量，它的第一个元素包含所有从0到9的平方数，第二个元素为10至19之内的所有平方数，依此类推，最后一个元素为90到99之内的平方数。
#apply(X, MARGIN, FUN)
#说明：
  -x: 一个数组或者矩阵
-MARGIN: 两种数值1或者2决定对哪一个维度进行函数计算
-MARGIN=1`: 操作基于行
-MARGIN=2`: 操作基于列
-MARGIN=c(1,2)`: 对行和列都进行操作
-FUN: 使用哪种操作，内置的函数有mean（平均值）、medium（中位数）、sum（求和）、min（最小值）、max（最大值）
#正式代码：
y1 = matrix(0:99,nrow = 10,ncol = 10,byrow = T)
list =  apply(
   y1,MARGIN = 1,
   function(y1)
   {
     y1[round(sqrt(y1))^2==y1]
   })
print(list)

#练习5-2 R有几个内置的数据集，其中包括由安德森和费舍尔在20世纪30年代收集和分析的iris（指鸢尾花，而不是虹膜）数据。输入iris即可看到数据集。创建一个新的数据框，它由iris数据集的数值列组成；计算各列的平均值。
iris      #查看iris数据集，发现最后一列为品种，只有1-5列为数值列
iris_data_frame <- iris[-5]
iris_data_frame    #只保留数值列
Col1_mean <- apply(iris_data_frame,2,mean)
Col1_mean

#练习5-3 beaver1和beaver2数据集包含两个海狸的体温数据。为beaver1数据集添加一列名为id的列，其值全部为1。同样,也为beaver2添加一个id列，值全为2。垂直拼接两个数据框，并且找到所有活跃着的海狸的子集.
beaver1$id <- c(1)
beaver2$id <- c(2)
new_beaver <- rbind(beaver1,beaver2)
print(new_beaver)
new_beaver[which(new_beaver$activ==1)]   #选择了未定义的列？
